{"version":3,"file":"commonHelpers.js","sources":["../src/js/spinner-options.js","../src/js/pixabay-service.js","../src/main.js"],"sourcesContent":["'use strict';\n\n\nexport const spinnerOptions = {\n    lines: 13,\n    length: 38,\n    width: 17,\n    radius: 45,\n    scale: 1,\n    corners: 1,\n    color: '#000',\n    fadeColor: 'transparent',\n    speed: 1,\n    rotate: 0,\n    animation: 'spinner-line-fade-quick',\n    direction: 1,\n    zIndex: 2e9,\n    className: 'spinner',\n    top: '50%',\n    left: '50%',\n    shadow: '0 0 1px transparent',\n    position: 'absolute',\n  };","'use strict';\nimport axios from 'axios';\n\nconst API_KEY = '44510981-dcecc8b47662a7959e520ee44';\nconst BASE_URL = 'https://pixabay.com/api/';\nconst MAX_KEYWORD_LENGTH = 100;\n\nasync function getImagesByKeyword(searchString, page = 1, per_page = 40) {\n  if (searchString.length > MAX_KEYWORD_LENGTH) {\n    throw new Error('Keyword is too long');\n  }\n\n  if (!searchString) {\n    throw new Error('Keyword is required');\n  }\n\n  const keywords = searchString.trim().split(/\\s+/);\n  const searchQuery = keywords.join('+');\n  return axios\n    .get(\n      `${BASE_URL}?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${per_page}`\n    )\n    .then(({ data }) => data);\n}\n\nexport { getImagesByKeyword };\n","'use strict';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { Spinner } from 'spin.js';\nimport { spinnerOptions } from './js/spinner-options';\nimport { getImagesByKeyword as getImagesByKeywords } from './js/pixabay-service';\n\nconst elements = {\n  gallery: document.querySelector('.gallery'),\n  form: document.querySelector('#search-form'),\n  loader: document.getElementById('loader'),\n  spinner: new Spinner(spinnerOptions),\n  lightbox: new SimpleLightbox('.gallery a', {}),\n  contentLoader: document.getElementById('content-loader'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nelements.form.addEventListener('submit', onSearch);\n\nconst gallery = {\n  page: 1,\n  per_page: 10,\n  query: '',\n  max_size: 0,\n  loadedImages: 0,\n};\n\nasync function onSearch(event) {\n  event.preventDefault();\n  elements.gallery.innerHTML = ''; // reset gallery content\n  gallery.page = 1;\n  gallery.query = elements.form.elements.searchQuery.value;\n  gallery.loadedImages = 0; // reset loaded images count\n\n  try {\n    elements.spinner.spin(elements.loader);\n    elements.submitBtn.setAttribute('disabled', 'disabled');\n    const response = await loadImages();\n    const images = response.hits;\n    if (response.totalHits === 0) {\n      iziToast.error({\n        title: 'Error',\n        message:\n          'Sorry, there are no images matching your search query. Please try again.',\n        position: 'topRight',\n      });\n    } else {\n      gallery.max_size = response.totalHits;\n      renderImages(images);\n      iziToast.success({\n        title: 'Success',\n        message: `Hooray! We found ${response.totalHits} images.`,\n        position: 'topRight',\n      });\n      if (gallery.loadedImages < gallery.max_size) {\n        observer.observe(elements.contentLoader);\n      }\n    }\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: error.message,\n      position: 'topRight',\n    });\n  } finally {\n    elements.spinner.stop();\n    elements.submitBtn.removeAttribute('disabled');\n    elements.form.reset();\n  }\n}\n\nasync function loadImages(\n  searchQuery = gallery.query,\n  page = gallery.page,\n  per_page = gallery.per_page\n) {\n  elements.spinner.spin(elements.gallery);\n  elements.submitBtn.setAttribute('disabled', 'disabled');\n  try {\n    const response = await getImagesByKeywords(searchQuery, page, per_page);\n    gallery.page += 1;\n    gallery.loadedImages += response.hits.length; // update loaded images count\n    if (gallery.loadedImages >= gallery.max_size) {\n      observer.unobserve(elements.contentLoader); // stop observing if max size reached\n    }\n    return response;\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: error.message,\n      position: 'topRight',\n    });\n    reject(error);\n  } finally {\n    elements.spinner.stop();\n    elements.submitBtn.removeAttribute('disabled');\n  }\n }\n\nfunction renderImages(images) {\n  let galleryContainer = document.querySelector('.gallery-container');\n\n  // creating gallery container if it doesn't exist\n  if (!galleryContainer) {\n    galleryContainer = document.createElement('ul');\n    galleryContainer.classList.add('gallery-container');\n    elements.gallery.appendChild(galleryContainer);\n  }\n\n  const photoCards = images\n    .map(image => {\n      return `<a href=\"${image.largeImageURL}\">\n        <div class=\"photo-card\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\"/>\n        <div class=\"info\">\n        <p class=\"info-item\">\n        <b>Likes</b>\n        ${image.likes}\n        </p>\n        <p class=\"info-item\">\n        <b>Views</b>\n        ${image.views}\n        </p>\n        <p class=\"info-item\">\n        <b>Comments</b>\n        ${image.comments}\n        </p>\n        <p class=\"info-item\">\n        <b>Downloads</b>\n        ${image.downloads}\n        </p>\n        </div>\n        </div>\n        </a>`;\n    })\n    .map(card => `<li class=\"gallery-item\">${card}</li>`)\n    .join('');\n  galleryContainer.insertAdjacentHTML('beforeend', photoCards);\n  elements.lightbox.refresh();\n}\n\nconst observer = new IntersectionObserver(\n  entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting && gallery.loadedImages < gallery.max_size) {\n        observer.unobserve(elements.contentLoader); // Temporarily stop observing to prevent multiple triggers\n        loadImages().then(response => {\n          renderImages(response.hits);\n          if (gallery.loadedImages < gallery.max_size) {\n            observer.observe(elements.contentLoader); // Re-observe after loading more images\n          }\n        }); // Load more images when the loader is visible\n      }\n    });\n  },\n  {\n    root: null,\n    rootMargin: '0px 0px 300px 0px',\n    threshold: 1.0,\n  }\n);\n"],"names":["spinnerOptions","API_KEY","BASE_URL","MAX_KEYWORD_LENGTH","getImagesByKeyword","searchString","page","per_page","searchQuery","axios","data","elements","Spinner","SimpleLightbox","onSearch","gallery","event","response","loadImages","images","iziToast","renderImages","observer","error","getImagesByKeywords","galleryContainer","photoCards","image","card","entries","entry"],"mappings":"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"}